##
#   \namespace  __startup__.py
#
#   \remarks    Call any python initialization code
#   
#   \author     beta@blur.com
#   \author     Blur Studio
#   \date       12/05/08
#

# initialize the Py3dsMax system
import os
import Py3dsMax
from Py3dsMax import mxs

# At some point in initialization  the install path is removed from the system path resulting in missing dlls when loading qt
# if it is installed in the max folder.
os.environ['path'] = ';'.join((mxs.pathConfig.resolvePathSymbols('$max'), os.environ.get('path', '')))

Py3dsMax.__dict__[ 'installPath' ] = mxs.pathConfig.resolvePathSymbols('$scripts\\python')

version = mxs.maxVersion()
if version:
	version = version[0]

# initialize the sys module
import sys
if version < 17000:
	# Max 2014 or older
	sys.argv = ['']
	sys.path.insert(0, Py3dsMax.installPath + r'\site-packages')
else:
	# Max 2015 or newer
	
	# Attempt to find the standard python install location and add it to sys.path
	registry = 'HKEY_LOCAL_MACHINE'
	key = r'SOFTWARE\Python\PythonCore\2.7\InstallPath'
	import _winreg
	aReg = _winreg.ConnectRegistry(None, getattr(_winreg, registry))
	sam = _winreg.KEY_WOW64_64KEY
	path = None
	try:
		regKey = _winreg.OpenKey(aReg, key, 0, _winreg.KEY_READ | sam)
		if regKey:
			path, regType = _winreg.QueryValueEx(regKey, '')
			path = os.path.join(path, 'Lib', 'site-packages')
	except WindowsError:
		pass
	if path:
		sp = list(sys.path)
		# Import the standard python install libs. This prevents us from having to install the same
		# python packages into the max directory.
		import site
		site.addsitedir(path)
		# Any paths added by addsitedir, should be moved below the default sys.path arguments.
		# This ensures that max specific versions will get priority over global python modules.
		for p in reversed(sp):
			sys.path.remove(p)
			sys.path.insert(0, p)
